/*
 * 생성자(Constructor)
 * ->클래스 명과 이름이 같은 메소드(함수)
 * -역할: 멤버 변수의 초기값( 시작값 ) 을 정해줍니다.
 */
//새로운 Academy 클래스를 정의: 주의사항으로 public 예약어는 불가능
//- 이유: public class는 하나만 존재) 이유: .java의 파일 이름으로 사용되기 때문)
// - 현재 파일 이름: TestConstructor.java
class Academy{
	 int studentNo = 1;
	 String studentName = "홍길동";
	 public Academy(){
		 //기본생성자.
		 System.out.println("실행 여부를 확인하기 위한 명령문");
		 //기본생성자의 생성 방법
		 //Academy a = new Academy();
	 }
	 public Academy(String name, Integer number){
		 //매개변수를 받는 생성자.
		 this.studentName = name;
		 this.studentNo = number;
		 //Academy b = new Academy(name1, number1);
	 }
}

public class TestConstructor {

	
	

	public static void main(String[] args) {
		Academy a = new Academy();
		Academy b = new Academy();
		Academy c = new Academy();
		System.out.println("1. 객체 이름 a=====================================================");
		System.out.println(a.studentNo);
		System.out.println(a.studentName);
		
		System.out.println("2. 객체 이름 b=====================================================");
		System.out.println(b.studentNo);
		System.out.println(b.studentName);
		
		System.out.println("3. 객체 이름 c=====================================================");
		System.out.println(c.studentNo);
		System.out.println(c.studentName);
		
		
		Academy d = new Academy("홍길동",4);
		Academy e = new Academy("홍닐동",5);
		Academy f = new Academy("홍딜동",6);
		
		System.out.println("4. 객체 이름 d=====================================================");
		System.out.println(d.studentNo);
		System.out.println(d.studentName);
		
		System.out.println("5. 객체 이름 e=====================================================");
		System.out.println(e.studentNo);
		System.out.println(e.studentName);
		
		System.out.println("6. 객체 이름 f=====================================================");
		System.out.println(f.studentNo);
		System.out.println(f.studentName);
		
		
	}

}
