package pkg1;
/*
 * 1. 인터페이스 기본 문법 익히기
 * 1) 형식
 * interface예약어 새로운 인터페이스 이름 
 * {
 * 		//상수를 정의: 형식은 public static final 자료형상수명 = 값;
 * 		public static final int A = 100;
 * 		//추상 메소드를 선언
 * }
 */
/*
 * 새로운 이름을 갖는 인터페이스를 정의하기
 * 1) 이름: MyInterface3
 * 2) 내부에는 추상 메소드를 선언
 * -형식: public static 반환형 메소드이름([매개변수선언]);
 * -예제1) 정수 덧셈 계싼할 때 사용할 수 있는 추상 메소드를 선언
 * public (abstract ,static) int add(int a, int b);
 * 
 */
interface MyInterface3{
	public abstract int add(int a, int b);
	
}
//위에서 정의한 MyInterface3 인터페이스를 상속(꾸현하는 새로운 클래스 MyClass2를 정의하기
class MyClass2 implements MyInterface3{

	@Override
	public int add(int a, int b) {
		return a+b;
	}
	public double add(double a, double b) {
		return a+b;
	}//자료형을 다르게 하였습니다.
	
}
interface MyInterface1{
	public static final int A = 100;
	
}

/*
 * 새로운 이름을 갖는 인터페이스를 정의하세요
 * 이름:MyInterface2
 */
interface MyInterface2{
	public static final double B =3.14;
	public static final String C = "나루토";
	public static final boolean D = true;
}
class MyClass1 implements MyInterface1,MyInterface2{
	//MyInterface1 내부에서 정의한 상수가 상속(물려받음)
	//새로운 메소드를 추가하기
	public void method() {
		System.out.println("새로 정의한 method() 메소드가 호출되었습니다.");
		System.out.println("인터페이스로부터 상속받은 상수명 a를 사용합니다.");
		System.out.println(A);
	}
}
public class Main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		MyClass1 c1 = new MyClass1();
		c1.method();
		
		 * 위에서 정의한 인터페이스 이름을 사용하는 여러가지 방법
		 * 1. 인터페이스이름 + 점(.) + 상수명
		 */
		System.out.println(MyInterface2.B);
		
		MyClass2 c2 = new MyClass2();
		/*
		 * 재정의한 public int add(int a, int b) 메소드를 호출하기
		 * - 형식: int 변수명 = b.add(매개변수a에 전달할 값_, 매개변수 b에 전달할 값);
		 */
		int c = c2.add(3, 5);
		//변수 c가 갖고 있는 메소드 add()의 반환값을 화면에 표시하기
		System.out.println(c);
		
		/*
		 * MyClass2 클래스에 새로 추가한 public double add(double a, double b) 메소드를 호출
		 */
		System.out.println(c2.add(3.14, 5.12));
	}
	

}
